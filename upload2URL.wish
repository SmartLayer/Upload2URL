#!/usr/bin/wish

package require http
package require tls
package require ftp
tls::init -tls1 1

# Create the main window
wm title . "FTP File Uploader"

namespace eval ::tk::dialog::file {
    set ::tk::dialog::file::showHiddenBtn 0
    set ::tk::dialog::file::showHiddenVar 1
}

# Read .netrc for credentials for a specific machine
proc getCredentials {machine} {
    set netrcFile [file join $::env(HOME) .netrc]
    if {[file exists $netrcFile]} {
        set fileContent [read [open $netrcFile]]
        set entries [split $fileContent "\n"]

        set currentMachine ""
        foreach entry $entries {
            set credential [dict create {*}$entry]
            if {[dict exists $credential machine] && [dict get $credential machine] == $machine} {
                return $credential
            }
        }
    }
    throw MISSING_CREDENTIAL "Missing credential for server $machine."
}

# Frame for layout
ttk::frame .f
pack .f -fill both -expand true -padx 10 -pady 10

# First row: File selection
ttk::frame .f.row1
pack .f.row1 -fill x -pady 5

ttk::label .f.row1.l -text "File:"
pack .f.row1.l -side left

ttk::entry .f.row1.e -textvar filePath -state readonly -width 40
pack .f.row1.e -side left -padx 5

ttk::button .f.row1.b -text "Select File" -command {
    set filePath [tk_getOpenFile]
    set fakeQuery [split [::http::formatQuery file [file tail $filePath]] =]
    set resultURL "https://computer.graphic.and.cryptographic.technology/ann/[lindex $fakeQuery 1]"
    pack .f.row3.e -side left -padx 5
    .f.row3.uploadingLabel configure -text "Uploading..."
    pack .f.row3.uploadingLabel -side left -padx 5
    pack forget .f.row4.copy
}
pack .f.row1.b -side left

# Second row: Upload button
ttk::button .f.upload -text "Upload" -command {
    uploadFile $filePath
}
pack .f.upload -side top -pady 5

# Third row: Result URL and Uploading label
ttk::frame .f.row3
pack .f.row3 -fill x -pady 5

ttk::entry .f.row3.e -textvar resultURL -width 60
pack forget .f.row3.e ;# Initially hidden

label .f.row3.uploadingLabel -text "Uploading..." ;# Use standard label widget
pack forget .f.row3.uploadingLabel ;# Initially hidden

# Fourth row: Copy button
ttk::frame .f.row4
pack .f.row4 -fill x -pady 5

ttk::button .f.row4.copy -text "Copy to Clipboard" -command {
    clipboard clear
    clipboard append $resultURL
} -state disabled ;# Initially hidden
pack forget .f.row4.copy

# Function to upload the file
proc uploadFile {file} {
    global resultURL

    # FTP details
    set server "server2.obble.com.au"
    set fileName [file tail $file]

    # Get credentials from .netrc
    set credential [getCredentials $server]

    # Initialize TLS
    package require tls
    tls::init -tls1 1
    set ::ftp::VERBOSE 1

    # Connect to the FTP server with TLS
    set ftp [ftp::Open $server [dict get $credential login] [dict get $credential password] -mode passive -tls 1]
    if {$ftp == -1} {
        throw FTP_ERROR "Some error in getting FTP connection"
    }
    # Upload the file
    ftp::Put $ftp $file $fileName

    # Close the connection
    ftp::Close $ftp

    # Update the uploading label and show the copy button
    .f.row3.uploadingLabel configure -text "Done"
    pack .f.row4.copy -side left -padx 5
    .f.row4.copy configure -state normal
}

# Initialize resultURL to be empty
set resultURL ""
